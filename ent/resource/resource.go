// Code generated by entc, DO NOT EDIT.

package resource

const (
	// Label holds the string label denoting the resource type in the database.
	Label = "resource"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAcls holds the string denoting the acls field in the database.
	FieldAcls = "acls"
	// FieldDefault holds the string denoting the default field in the database.
	FieldDefault = "default"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the resource in the database.
	Table = "resources"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "resources"
	// OwnerInverseTable is the table name for the Group entity.
	// It exists in this package in order to avoid circular dependency with the "group" package.
	OwnerInverseTable = "groups"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "group_resources"
)

// Columns holds all SQL columns for resource fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAcls,
	FieldDefault,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "resources"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"group_resources",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
